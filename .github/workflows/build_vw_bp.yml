# build the VM binary parser using the reinforcement learning library.
# build all supported platforms: Windows, Linux, and MacOS
# once this is complete, the binaries will be available to the doenet
# projects.
name: Build Binary Parser

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'
  # NOTE: allow manual triggering of the workflow for testing (remove before making public)
  workflow_dispatch:

env:
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg_binary_cache

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  build-binary-parser:
    name: binary-parser-${{ matrix.build.build_type }}-${{ startsWith(matrix.config.os, 'macos') && 'macos-latest' || matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: "windows-latest", vcpkg_target_triplet: "x64-windows-static" }
          - { os: "ubuntu-latest", vcpkg_target_triplet: "x64-linux" }
          - { os: "macos-13", vcpkg_target_triplet: "x64-osx" }
        build:
          # Set the appropriate static runtime for MSVC on Windows
          # CMake ignores the CMAKE_MSVC_RUNTIME_LIBRARY option on other platforms
          - { build_type: "debug" }
          - { build_type: "release" }
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.config.vcpkg_target_triplet }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: git -C ${{ github.workspace }}/ext_libs/vcpkg fetch --unshallow
      - name: Setup MSVC Developer Command Prompt
        if: ${{ startsWith(matrix.config.os, 'windows') }}
        uses: ilammy/msvc-dev-cmd@v1
      - uses: lukka/get-cmake@latest
      - run: echo "VCPKG_COMMIT=$(git rev-parse :ext_libs/vcpkg)" >> $GITHUB_ENV
        shell: bash
      - run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}/*
          key: ${{ startsWith(matrix.config.os, 'macos') && 'macos-latest' || matrix.config.os }}-build-${{ env.cache-name }}-${{ hashFiles('vcpkg.json') }}-${{ env.VCPKG_COMMIT }}
      - uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ github.workspace }}/ext_libs/vcpkg'
          vcpkgJsonGlob: "${{ github.workspace }}/ext_libs/vcpkg.json"
      - name: Configure
        run: >
          cd ext_libs;
          cmake --preset=vcpkg-${{ matrix.config.vcpkg_target_triplet }}${{ startsWith(matrix.config.os, 'windows') && '' || '-static' }}
      - name: Build
        run: |
          cd ext_libs
          cmake --build build --preset=vcpkg-${{ matrix.config.vcpkg_target_triplet }}${{ startsWith(matrix.config.os, 'windows') && '' || '-static' }} --config ${{ matrix.build.build_type }}
