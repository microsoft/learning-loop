# Run unit tests
name: Unit Test

on:
  workflow_run:
    workflows: ["Build Assemblies"]
    types:
      - completed

env:
  BUILD_ARTIFACTS_CACHE: ${{github.workspace}}/artifacts

jobs:
  unit-test:
    name: unittest-${{ matrix.build.build_type }}-${{ matrix.config.os_name }}
    runs-on: ${{ matrix.config.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: "windows-latest", os_name: "windows-latest" }
          - { os: "ubuntu-latest", os_name: "ubuntu-latest" }
          - { os: "macos-13", os_name: "macos-latest" }
        build:
          - { build_type: "debug" }
          - { build_type: "release" }

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.head_ref || github.ref }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      - name: Restore Binaries
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.BUILD_ARTIFACTS_CACHE }}
          key: learning-loop-${{ github.event.workflow_run.outputs.cache_key }}-artifacts

      - name: Build VW Resolver
        run: dotnet vstest ${{ env.BUILD_ARTIFACTS_CACHE }}/${{ matrix.config.os_name }}/${{ matrix.build.build_type }}/Tests/Tests.dll /ResultsDirectory:${{ env.BUILD_ARTIFACTS_CACHE }}/${{ matrix.config.os_name }}/${{ matrix.build.build_type }}/testresults --settings:./test.runsettings --collect:"XPlat Code Coverage" --logger:"trx;LogFilePrefix=testresult"
